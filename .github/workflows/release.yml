name: Release

on: [workflow_dispatch]

jobs:
  test:
    name: "Test on Python ${{ matrix.python-version }} (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: "actions/checkout@v5"
        with:
          fetch-depth: 0

      # Setup env
      - uses: "actions/setup-python@v6"
        with:
            python-version: "${{ matrix.python-version }}"

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: "Installs for ${{ matrix.python-version }}"
        run: |
          uv venv venv -p python${{ matrix.python-version }}
          uv tool install -p venv nox

      - name: "Run nox for ${{ matrix.python-version }}"
        shell: bash
        run: |
          nox  -db uv --force-python python -s test


  docbuild:
    name: "Test the docs"
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v5"
        with:
          fetch-depth: 0

      - uses: "actions/setup-python@v6"
        with:
            python-version: "3.12"

      - name: "Installs for docs"
        run: |
          pip install --upgrade pip nox
          pip install ".[doc]"

      - name: "test the docs code"
        run: "nox -s testdocs-3.12"

  build:
    name: Build wheel and sdist
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      
      - name: Install build dependency
        run: |
          pip install build
          pip install --upgrade pip

      - name: Build sdist and wheel
        run: python -m build --wheel --sdist

      - name: Upload sdist and wheel
        uses: actions/upload-artifact@v4
        with:
          name: c3-wheel-sdist
          path: |
            ./dist/*.whl
            ./dist/*.tar.gz
  
  release_test:
    name: Release to Test PyPI
    needs: [build, docbuild]
    environment: release_test
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download sdist and wheel
        uses: actions/download-artifact@v6
        with:
          name: c3-wheel-sdist
          path: ./dist

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
  
  release:
    name: Release to PyPI
    needs: release_test
    environment: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download sdist and wheel
        uses: actions/download-artifact@v6
        with:
          name: c3-wheel-sdist
          path: ./dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1