name: CI

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches-ignore:
      - master
# NOTE:
# if changeing python versions, also update versions in
# - release.yml
# - noxfile.py

jobs:
  tests:
    name: "Python ${{ matrix.python-version }} (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.13"]

    steps:
      - uses: "actions/checkout@v5"
        with:
          fetch-depth: 0

      # Setup env
      - uses: "actions/setup-python@v6"
        with:
            python-version: "${{ matrix.python-version }}"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: "Installs for ${{ matrix.python-version }}"
        run: |
          uv venv venv -p python${{ matrix.python-version }}
          uv tool install -p venv nox

      - name: "Run nox for ${{ matrix.python-version }}"
        shell: bash
        run: |
          dn=$(pwd)
          cov="--cov-report lcov:lcov-${{matrix.os}}-${{matrix.python-version}}.lcov --cov-report term --cov-append --cov cogent3 --cov-config=${dn}/.coveragerc"
          nox  -db uv --force-python python -s test -- $cov

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{matrix.python-version}}-${{matrix.os}}
          file: "tests/lcov-${{matrix.os}}-${{matrix.python-version}}.lcov"

  type_check:
    name: Type Check
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.13"]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: "Run Type Checking for ${{ matrix.python-version }}" 
        run: |
          pip install -e .[typing]
          mypy src/cogent3/core/alignment.py src/cogent3/core/alphabet.py src/cogent3/core/annotation.py src/cogent3/core/genetic_code.py src/cogent3/core/location.py src/cogent3/core/moltype.py src/cogent3/core/seq_storage.py src/cogent3/core/sequence.py src/cogent3/core/seqview.py src/cogent3/core/slice_record.py src/cogent3/core/tree.py


  finish:
    name: "Finish Coveralls"
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true