[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "cogent3"
description = """COmparative GENomics Toolkit 3: genomic sequence analysis within notebooks or on compute systems with 1000s of CPUs."""
# remember to update cogent3/_version.py too!
version = "2024.5.7a1"
authors = [
    { name = "Gavin Huttley", email = "Gavin.Huttley@anu.edu.au"},
]
keywords = ["biology", "genomics", "statistics", "phylogeny", "evolution", "bioinformatics"]
readme = "README.md"
license = { file = "LICENSE" }
dependencies = ["chardet",
        # until we know all dependencies work on numpy 2, pin to lesser version
        "numpy<3",
        "numba>0.53; python_version>='3.9' and python_version <'3.12'",
        "numba>0.54; python_version>='3.10' and python_version <'3.12'",
        "numba>=0.57.0; python_version=='3.11'",
        "numba>=0.59.0; python_version=='3.12'",
        "scipy",
        "scitrack",
        "stevedore",
        "tqdm",
        "typing_extensions"]
# remember to update version in requires-python and classifiers
requires-python = ">=3.9,<3.13"
classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: BSD License",
        "Topic :: Scientific/Engineering :: Bio-Informatics",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
    ]

[project.urls]
Documentation = "https://www.cogent3.org/"
"Bug Tracker" = "https://github.com/cogent3/cogent3/issues"
"Source Code" = "https://github.com/cogent3/cogent3"
Changelog = "https://github.com/cogent3/cogent3/blob/develop/changelog.md"

[project.optional-dependencies]
test = [
    "black==24.4.2",
    "isort==5.13.2",
    "click==8.1.7", # black needs this pinned
    "kaleido",
    "pandas",
    "plotly",
    "psutil",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "tinydb",
    "nox"]
doc  = ["click==8.1.7",
        "ipykernel",
        "ipython",
        "ipywidgets",
        "jupyter-sphinx",
        "jupyter_client",
        "jupyterlab",
        "jupytext",
        "kaleido",
        "matplotlib",
        "nbconvert>5.4",
        "nbformat",
        "nbsphinx",
        "numpydoc",
        "pandas",
        "pillow",
        "plotly",
        "psutil",
        "sphinx",
        "sphinx-autobuild",
        "pydata_sphinx_theme",
        "sphinx_design",
        "sphinxcontrib-bibtex",
        "sphinxcontrib-video"]
extra = ["pandas", "plotly", "psutil", "kaleido"]
dev = ["black==24.4.2",
       "click==8.1.7",
       "flit",
       "ipykernel",
       "ipython",
       "ipywidgets",
       "isort==5.13.2",
       "jupyter-sphinx",
       "jupyter_client",
       "jupyterlab",
       "jupytext",
       "kaleido",
       "matplotlib",
       "nbconvert>5.4",
       "nbformat",
       "nbsphinx",
       "nox",
       "numpydoc",
       "pandas",
       "pillow",
       "plotly",
       "psutil",
       "pytest",
       "pytest-cov",
       "pytest-xdist",
       "scriv",
       "sphinx",
       "sphinx-autobuild",
       "pydata_sphinx_theme",
       "sphinx_design",
       "sphinxcontrib-bibtex",
       "sphinxcontrib-video",
       "tinydb"
]

[tool.flit.sdist]
include = ["doc/", "requirements.txt", "src/*", "pyproject.toml"]
exclude = ["doc/*.html"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "internet: marks tests that require internet access  (deselect with '-m \"not internet\"')"
    ]
testpaths = "tests"
addopts = ["--strict-config"]
norecursedirs = ["doc", ".nox"]
filterwarnings = [
    'ignore:FORCED EXIT from optimiser',
    'ignore:Motif probs overspecified',
    'ignore:Model not reversible',
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.venv
  | _build
  | build
  | dist
  | tests/data
)/
'''

[tool.isort]
atomic=true
force_grid_wrap=0
include_trailing_comma=true
lines_after_imports=2
lines_between_types=1
multi_line_output=3
use_parentheses=true
src_paths = ["src", "tests","doc","noxfile.py"]

[tool.scriv]
format="md"
categories=["Contributors", "ENH", "BUG", "DOC", "Deprecations", "Discontinued"]
output_file="changelog.md"
version="literal: src/cogent3/_version.py:__version__"
skip_fragments="README.*"
new_fragment_template="file: changelog.d/templates/new.md.j2"
entry_title_template="file: changelog.d/templates/title.md.j2"

[project.entry-points."cogent3.app"]
concat = "cogent3.app.sample:concat"
fixed_length = "cogent3.app.sample:fixed_length"
load_aligned = "cogent3.app.io:load_aligned"
load_db = "cogent3.app.io:load_db"
load_json = "cogent3.app.io:load_json"
load_tabular = "cogent3.app.io:load_tabular"
load_unaligned = "cogent3.app.io:load_unaligned"
min_length = "cogent3.app.sample:min_length"
omit_bad_seqs = "cogent3.app.sample:omit_bad_seqs"
omit_degenerates = "cogent3.app.sample:omit_degenerates"
omit_duplicated = "cogent3.app.sample:omit_duplicated"
omit_gap_pos = "cogent3.app.sample:omit_gap_pos"
select_translatable = "cogent3.app.translate:select_translatable"
take_codon_positions = "cogent3.app.sample:take_codon_positions"
take_n_seqs = "cogent3.app.sample:take_n_seqs"
take_named_seqs = "cogent3.app.sample:take_named_seqs"
translate_seqs = "cogent3.app.translate:translate_seqs"
trim_stop_codons = "cogent3.app.sample:trim_stop_codons"
write_db = "cogent3.app.io:write_db"
write_json = "cogent3.app.io:write_json"
write_seqs = "cogent3.app.io:write_seqs"
write_tabular = "cogent3.app.io:write_tabular"
fast_slow_dist = "cogent3.app.dist:fast_slow_dist"
jaccard_dist = "cogent3.app.dist:jaccard_dist"
approx_pdist = "cogent3.app.dist:approx_pdist"
approx_jc69 = "cogent3.app.dist:approx_jc69"
gap_dist = "cogent3.app.dist:gap_dist"
scale_branches = "cogent3.app.tree:scale_branches"
uniformize_tree = "cogent3.app.tree:uniformize_tree"
quick_tree = "cogent3.app.tree:quick_tree"
align_to_ref = "cogent3.app.align:align_to_ref"
progressive_align = "cogent3.app.align:progressive_align"
smith_waterman = "cogent3.app.align:smith_waterman"
ic_score = "cogent3.app.align:ic_score"
cogent3_score = "cogent3.app.align:cogent3_score"
sp_score = "cogent3.app.align:sp_score"
model = "cogent3.app.evo:model"
model_collection = "cogent3.app.evo:model_collection"
hypothesis = "cogent3.app.evo:hypothesis"
bootstrap = "cogent3.app.evo:bootstrap"
ancestral_states = "cogent3.app.evo:ancestral_states"
tabulate_stats = "cogent3.app.evo:tabulate_stats"
natsel_neutral = "cogent3.app.evo:natsel_neutral"
natsel_zhang = "cogent3.app.evo:natsel_zhang"
natsel_sitehet = "cogent3.app.evo:natsel_sitehet"
natsel_timehet = "cogent3.app.evo:natsel_timehet"
